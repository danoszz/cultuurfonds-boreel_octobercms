.c-gallery--grid {
  display: grid;
  width: 100%;
  grid-template-columns: 1fr;
  grid-gap: $size--grid__tile;

  .c-gallery--grid--object {
    height: calc((100vw - (#{$size--grid__tile} * 2)) / #{$aspect-ratio--object});
    width: 100%;
    margin: 0;
    background: $white;
    box-shadow: 0 ($size--grid__tile / 4) $size--grid__tile 0 rgba($black, 0.20);
    border-radius: 5px;
    position: relative;
    overflow: hidden;
    transition: all 300ms ease-in-out;

    * {
      transition: all 300ms ease-in-out;
    }
    &:after {
      content: '';
      position: absolute;
      width: 100%;
      height: 100%;
      background-image: linear-gradient(-180deg, rgba($black,0.50) 0%, transparent 15%, transparent 65%, $black 100%);
      opacity: 0.75;
      z-index: 2;
      top: 0;
      left: 0;
      border-radius: 5px;

    }
    img {
      position: relative;
      display: block;
      min-height: 100%;
      max-width: 100%;
      object-fit: cover;
      transform: scale(1.05);

    }
    figcaption {
      backface-visibility: hidden;
      position: absolute;
      bottom: 0;
      padding: $size--grid__tile / 2;
      color: $white;
      z-index: 3;
    }
    &:hover {
      img {
        transform: scale(1);
      }
      box-shadow: 0 ($size--grid__tile / 2) ($size--grid__tile * 2) 0 rgba($black, 0.15);
    }
  }
  @media screen and (min-width: 30rem) {
    grid-template-columns: 1fr 1fr;

    .c-gallery--grid--object {
      height: calc(((100vw / 2) - (#{$size--grid__tile} * 2)) / #{$aspect-ratio--object});
    }
  }
  @media screen and (min-width: 48rem) {
    .c-gallery--grid--object {
      height: calc(((100vw / 2) - (#{$size--grid__tile} * 4)) / #{$aspect-ratio--object});
    }
  }
  @media screen and (min-width: 52rem) {
    grid-template-columns: 1fr 1fr 1fr;

    .c-gallery--grid--object {
      height: calc(((100vw / 3) - (#{$size--grid__tile} * 3)) / #{$aspect-ratio--object});
      max-height: 333.33px;
    }
  }
}
